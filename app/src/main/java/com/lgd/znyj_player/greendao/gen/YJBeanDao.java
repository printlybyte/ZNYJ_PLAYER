package com.lgd.znyj_player.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.lgd.znyj_player.bean.YJBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "YJBEAN".
*/
public class YJBeanDao extends AbstractDao<YJBean, Long> {

    public static final String TABLENAME = "YJBEAN";

    /**
     * Properties of entity YJBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property MYJName = new Property(1, String.class, "mYJName", false, "M_YJNAME");
        public final static Property MYJdevice = new Property(2, String.class, "mYJdevice", false, "M_YJDEVICE");
        public final static Property MYJip = new Property(3, String.class, "mYJip", false, "M_YJIP");
        public final static Property MYJUrl = new Property(4, String.class, "mYJUrl", false, "M_YJURL");
        public final static Property MYJother = new Property(5, String.class, "mYJother", false, "M_YJOTHER");
        public final static Property MYJother2 = new Property(6, String.class, "mYJother2", false, "M_YJOTHER2");
        public final static Property MYJother3 = new Property(7, String.class, "mYJother3", false, "M_YJOTHER3");
        public final static Property MYJother4 = new Property(8, String.class, "mYJother4", false, "M_YJOTHER4");
        public final static Property MYJother5 = new Property(9, String.class, "mYJother5", false, "M_YJOTHER5");
        public final static Property MYJother6 = new Property(10, String.class, "mYJother6", false, "M_YJOTHER6");
    };


    public YJBeanDao(DaoConfig config) {
        super(config);
    }
    
    public YJBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"YJBEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"M_YJNAME\" TEXT," + // 1: mYJName
                "\"M_YJDEVICE\" TEXT," + // 2: mYJdevice
                "\"M_YJIP\" TEXT," + // 3: mYJip
                "\"M_YJURL\" TEXT," + // 4: mYJUrl
                "\"M_YJOTHER\" TEXT," + // 5: mYJother
                "\"M_YJOTHER2\" TEXT," + // 6: mYJother2
                "\"M_YJOTHER3\" TEXT," + // 7: mYJother3
                "\"M_YJOTHER4\" TEXT," + // 8: mYJother4
                "\"M_YJOTHER5\" TEXT," + // 9: mYJother5
                "\"M_YJOTHER6\" TEXT);"); // 10: mYJother6
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"YJBEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, YJBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String mYJName = entity.getMYJName();
        if (mYJName != null) {
            stmt.bindString(2, mYJName);
        }
 
        String mYJdevice = entity.getMYJdevice();
        if (mYJdevice != null) {
            stmt.bindString(3, mYJdevice);
        }
 
        String mYJip = entity.getMYJip();
        if (mYJip != null) {
            stmt.bindString(4, mYJip);
        }
 
        String mYJUrl = entity.getMYJUrl();
        if (mYJUrl != null) {
            stmt.bindString(5, mYJUrl);
        }
 
        String mYJother = entity.getMYJother();
        if (mYJother != null) {
            stmt.bindString(6, mYJother);
        }
 
        String mYJother2 = entity.getMYJother2();
        if (mYJother2 != null) {
            stmt.bindString(7, mYJother2);
        }
 
        String mYJother3 = entity.getMYJother3();
        if (mYJother3 != null) {
            stmt.bindString(8, mYJother3);
        }
 
        String mYJother4 = entity.getMYJother4();
        if (mYJother4 != null) {
            stmt.bindString(9, mYJother4);
        }
 
        String mYJother5 = entity.getMYJother5();
        if (mYJother5 != null) {
            stmt.bindString(10, mYJother5);
        }
 
        String mYJother6 = entity.getMYJother6();
        if (mYJother6 != null) {
            stmt.bindString(11, mYJother6);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, YJBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String mYJName = entity.getMYJName();
        if (mYJName != null) {
            stmt.bindString(2, mYJName);
        }
 
        String mYJdevice = entity.getMYJdevice();
        if (mYJdevice != null) {
            stmt.bindString(3, mYJdevice);
        }
 
        String mYJip = entity.getMYJip();
        if (mYJip != null) {
            stmt.bindString(4, mYJip);
        }
 
        String mYJUrl = entity.getMYJUrl();
        if (mYJUrl != null) {
            stmt.bindString(5, mYJUrl);
        }
 
        String mYJother = entity.getMYJother();
        if (mYJother != null) {
            stmt.bindString(6, mYJother);
        }
 
        String mYJother2 = entity.getMYJother2();
        if (mYJother2 != null) {
            stmt.bindString(7, mYJother2);
        }
 
        String mYJother3 = entity.getMYJother3();
        if (mYJother3 != null) {
            stmt.bindString(8, mYJother3);
        }
 
        String mYJother4 = entity.getMYJother4();
        if (mYJother4 != null) {
            stmt.bindString(9, mYJother4);
        }
 
        String mYJother5 = entity.getMYJother5();
        if (mYJother5 != null) {
            stmt.bindString(10, mYJother5);
        }
 
        String mYJother6 = entity.getMYJother6();
        if (mYJother6 != null) {
            stmt.bindString(11, mYJother6);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public YJBean readEntity(Cursor cursor, int offset) {
        YJBean entity = new YJBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // mYJName
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // mYJdevice
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // mYJip
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // mYJUrl
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // mYJother
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // mYJother2
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // mYJother3
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // mYJother4
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // mYJother5
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10) // mYJother6
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, YJBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMYJName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMYJdevice(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMYJip(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setMYJUrl(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setMYJother(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setMYJother2(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setMYJother3(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setMYJother4(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setMYJother5(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setMYJother6(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(YJBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(YJBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
